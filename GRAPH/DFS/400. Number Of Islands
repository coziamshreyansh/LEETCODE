class Solution {
public:
    
    int numIslands(vector<vector<char>>& grid) {
        // approach is to call dfs if 1 is found and for every island once dfs is completed do ans++ and 
//         mark the visited 1's as -1
        int row=grid.size();
        int col=grid[0].size();
        int ans=0;
        for(int i=0; i<row; i++)
        {
            for(int j=0;j<col;j++)
            {
                if(grid[i][j] == '1')
                {
                    ans++;
                    dfs(i, j, grid);
                    
                }
            }
        }
        return ans;
    }
    void dfs(int i, int j, vector<vector<char>>& grid)
    {
        if (i < 0 || i == grid.size() || j < 0 || j == grid[0].size() || grid[i][j] == '0') {
            return;
        }
        grid[i][j] = '0';
         
        dfs(i-1, j, grid);
        dfs(i+1, j, grid);
        dfs(i, j-1, grid);
        dfs(i, j+1, grid);
    }
};
